// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcionAPI.Data;

#nullable disable

namespace ProcionAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProcionAPI.Models.Entities.Access", b =>
                {
                    b.Property<int>("Access_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Access_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Temp_Access_ID")
                        .HasColumnType("int");

                    b.HasKey("Access_ID");

                    b.HasIndex("Temp_Access_ID");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("AdminSurname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("CellPhone_Num")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Admin_ID");

                    b.HasIndex("User_Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Asset", b =>
                {
                    b.Property<int>("Asset_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Asset_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Asset_ID");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Branch", b =>
                {
                    b.Property<int>("Branch_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Postal_Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Branch_ID");

                    b.ToTable("Branch");

                    b.HasData(
                        new
                        {
                            Branch_ID = 1,
                            City = "Pretoria",
                            Name = "Pretoria",
                            Postal_Code = "0042",
                            Province = "Gauteng",
                            Street = "Jean Ave"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Budget_Allocation", b =>
                {
                    b.Property<int>("Budget_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Budget_ID"));

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Budget_ID");

                    b.HasIndex("Department_ID");

                    b.ToTable("Budget_Allocation");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Budget_Category", b =>
                {
                    b.Property<int>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_ID"));

                    b.Property<string>("Account_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Category_ID");

                    b.ToTable("Budget_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Budget_Line", b =>
                {
                    b.Property<int>("Account_Code")
                        .HasColumnType("int");

                    b.Property<int>("Budget_ID")
                        .HasColumnType("int");

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("ActualAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Variance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Account_Code", "Budget_ID", "Category_ID");

                    b.HasIndex("Budget_ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("Budget_Line");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Calender_Item", b =>
                {
                    b.Property<int>("Calender_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Calender_Item_ID"));

                    b.Property<int>("Admin_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("Importance_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Calender_Item_ID");

                    b.HasIndex("Admin_ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("Importance_ID");

                    b.ToTable("Calender_Items");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Consumable", b =>
                {
                    b.Property<int>("Consumable_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consumable_ID"));

                    b.Property<int>("Consumable_Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Maximum_Reorder_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Minimum_Reorder_Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("On_Hand")
                        .HasColumnType("int");

                    b.HasKey("Consumable_ID");

                    b.HasIndex("Consumable_Category_ID");

                    b.ToTable("Consumable");

                    b.HasData(
                        new
                        {
                            Consumable_ID = 1,
                            Consumable_Category_ID = 1,
                            Description = "Bonaqua",
                            Maximum_Reorder_Quantity = 100,
                            Minimum_Reorder_Quantity = 50,
                            Name = "Water",
                            On_Hand = 2
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Consumable_Category", b =>
                {
                    b.Property<int>("Consumable_Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consumable_Category_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Consumable_Category_ID");

                    b.ToTable("Consumable_Category");

                    b.HasData(
                        new
                        {
                            Consumable_Category_ID = 1,
                            Description = "Mykitchen",
                            Name = "Kitchen"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Contracted_Partner_Type", b =>
                {
                    b.Property<int>("Contracted_Partner_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contracted_Partner_Type_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Contracted_Partner_Type_ID");

                    b.ToTable("Contracted_Partner_Type");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Delegation_Of_Authority", b =>
                {
                    b.Property<int>("Delegation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Delegation_ID"));

                    b.Property<int>("Admin_ID")
                        .HasColumnType("int");

                    b.Property<string>("Delegation_Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("From_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("To_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Delegation_ID");

                    b.HasIndex("Admin_ID");

                    b.HasIndex("User_Id");

                    b.ToTable("Delegation_Of_Authority");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Delegation_Status", b =>
                {
                    b.Property<int>("Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_ID"));

                    b.Property<int>("Delegation_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Status_ID");

                    b.HasIndex("Delegation_ID");

                    b.ToTable("Delegation_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Department", b =>
                {
                    b.Property<int>("Department_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Department_ID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Department_ID = 1,
                            Description = "Business Enablement",
                            Name = "BE"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Due_Dillegence", b =>
                {
                    b.Property<int>("Due_Diligence_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Due_Diligence_ID"));

                    b.Property<bool>("Accreditation_Required")
                        .HasColumnType("bit");

                    b.Property<bool>("Anti_Bribery_Corruption_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("B_BBEE_Certificate_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Basic_Company_Info_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Business_Continuity_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Business_References_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Company_Details_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Company_Reg_Doc_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Company_Resolution_Agreement_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Conflict_Of_Interest_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Customer_Complaints_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Cyber_Insurance_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("DIsaster_Recovery_Plan_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Data_Retention_Destruction_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Data_Security_Breaches_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Direcor_Details_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Due_Diligence_Doc")
                        .HasColumnType("bit");

                    b.Property<bool>("Ethics_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("General_Liability_Insurance_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Group_Structure_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Income_Tax_Number_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Individual_Details_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Information_Security_Policy_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Letter_Of_Good_Standing_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Licenses_Required")
                        .HasColumnType("bit");

                    b.Property<bool>("Mutual_Nda_Signed")
                        .HasColumnType("bit");

                    b.Property<bool>("Other_Insurance_Required")
                        .HasColumnType("bit");

                    b.Property<bool>("POPI_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Privacy_Policy_Present_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Proffesional_Indemnity_Insurance_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Proffesional_Membership_Required")
                        .HasColumnType("bit");

                    b.Property<bool>("Site_Visits_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Subcontractor_Name_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Tax_Clearance_Certificate_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Vat_Number_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Vat_Reg_Certificate_Provided")
                        .HasColumnType("bit");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Due_Diligence_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Due_Dillegence");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("Branch_ID")
                        .HasColumnType("int");

                    b.Property<string>("CellPhone_Num")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Mandate_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("Branch_ID");

                    b.HasIndex("Department_ID");

                    b.HasIndex("Mandate_ID");

                    b.HasIndex("User_Id");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Branch_ID = 1,
                            CellPhone_Num = "074 845 2548",
                            Department_ID = 1,
                            Email = "jdoe@gmail.com",
                            EmployeeName = "John",
                            EmployeeSurname = "Doe",
                            Mandate_ID = 1,
                            User_Id = 1
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.HELP", b =>
                {
                    b.Property<int>("Help_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Help_Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("User_Manual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Help_ID");

                    b.HasIndex("Help_Category_ID");

                    b.ToTable("HELP");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Help_Category", b =>
                {
                    b.Property<int>("Help_Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_Category_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Help_Category_ID");

                    b.ToTable("Help_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Importance_Level", b =>
                {
                    b.Property<int>("Importance_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Importance_ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Importance_ID");

                    b.ToTable("Importance_Level");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Mandate_Limit", b =>
                {
                    b.Property<int>("Mandate_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mandate_ID"));

                    b.Property<double>("Ammount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Mandate_ID");

                    b.ToTable("Mandate_Limit");

                    b.HasData(
                        new
                        {
                            Mandate_ID = 1,
                            Ammount = 10000.0,
                            Date = new DateTime(2023, 5, 22, 21, 27, 33, 770, DateTimeKind.Local).AddTicks(8595)
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Notification", b =>
                {
                    b.Property<int>("Notification_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Notification_ID"));

                    b.Property<int>("Calender_Item_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Due_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Notification_Type_ID")
                        .HasColumnType("int");

                    b.HasKey("Notification_ID");

                    b.HasIndex("Calender_Item_ID");

                    b.HasIndex("Notification_Type_ID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Notification_Type", b =>
                {
                    b.Property<int>("Notification_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Notification_Type_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Notification_Type_ID");

                    b.ToTable("Notification_Type");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Onboard_Request", b =>
                {
                    b.Property<int>("Onboard_Request_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_ID")
                        .HasColumnType("int");

                    b.Property<string>("Quotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.HasKey("Onboard_Request_Id", "User_Id", "Vendor_ID");

                    b.HasIndex("Status_ID");

                    b.HasIndex("User_Id");

                    b.HasIndex("Vendor_ID");

                    b.ToTable("Onboard_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Onboard_Status", b =>
                {
                    b.Property<int>("Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Status_ID");

                    b.ToTable("Onboard_Status");

                    b.HasData(
                        new
                        {
                            Status_ID = 1,
                            Description = "Pending",
                            Name = "Pending"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.POPI", b =>
                {
                    b.Property<int>("POPI_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POPI_ID"));

                    b.Property<bool>("Activity_Liability_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Confidentiality_Importance_Highlighted")
                        .HasColumnType("bit");

                    b.Property<bool>("Contract_Audits_Provisions_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Contract_End_Data_Management_Provided")
                        .HasColumnType("bit");

                    b.Property<int>("Contracted_Partner_Type_ID")
                        .HasColumnType("int");

                    b.Property<bool>("DataProcessing_JointController_Agreement")
                        .HasColumnType("bit");

                    b.Property<int>("Due_Diligence_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Personal_Data_Processing_Details_Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Personal_Data_Purpose")
                        .HasColumnType("bit");

                    b.Property<bool>("Processing_Activities_Certification_Held")
                        .HasColumnType("bit");

                    b.Property<bool>("Third_Party_Data_Processing_Provisioned")
                        .HasColumnType("bit");

                    b.HasKey("POPI_ID");

                    b.HasIndex("Contracted_Partner_Type_ID");

                    b.HasIndex("Due_Diligence_ID");

                    b.ToTable("POPI");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Payment_Made", b =>
                {
                    b.Property<int>("Payment_Made_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Made_ID"));

                    b.Property<DateTime>("Paid_On_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Procurement_Request_ID")
                        .HasColumnType("int");

                    b.Property<string>("Receipt_Upload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Payment_Made_ID");

                    b.HasIndex("Procurement_Request_ID");

                    b.ToTable("Payment_Made");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Payment_Method", b =>
                {
                    b.Property<int>("Payment_Method_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Method_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Payment_Method_ID");

                    b.ToTable("Payment_Method");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Asset", b =>
                {
                    b.Property<int>("Procurement_Asset_ID")
                        .HasColumnType("int");

                    b.Property<int>("Procurement_Request_ID")
                        .HasColumnType("int");

                    b.Property<int>("Asset_ID")
                        .HasColumnType("int");

                    b.Property<string>("Invoice_Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Procurement_Asset_ID", "Procurement_Request_ID", "Asset_ID");

                    b.HasIndex("Asset_ID");

                    b.HasIndex("Procurement_Request_ID");

                    b.ToTable("Procurement_Asset");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Consumable", b =>
                {
                    b.Property<int>("Procurement_Consumable_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Procurement_Consumable_ID"));

                    b.Property<int>("Consumable_ID")
                        .HasColumnType("int");

                    b.Property<string>("Invoice_Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Procurement_Request_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Procurement_Consumable_ID");

                    b.HasIndex("Consumable_ID");

                    b.HasIndex("Procurement_Request_ID");

                    b.ToTable("Procurement_Consumable");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Payment_Status", b =>
                {
                    b.Property<int>("Procurement_Payment_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Procurement_Payment_Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Procurement_Payment_Status_ID");

                    b.ToTable("Procurement_Payment_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Request", b =>
                {
                    b.Property<int>("Procurement_Request_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Procurement_Request_ID"));

                    b.Property<int>("Account_Code")
                        .HasColumnType("int");

                    b.Property<int>("Budget_ID")
                        .HasColumnType("int");

                    b.Property<string>("Buyer_Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Buyer_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deposit_Required")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Full_Payment_Due_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Item_Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("Payment_Made")
                        .HasColumnType("bit");

                    b.Property<int>("Payment_Method_ID")
                        .HasColumnType("int");

                    b.Property<int>("Procurement_Payment_Status_ID")
                        .HasColumnType("int");

                    b.Property<int>("Procurement_Status_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Proof_Of_Payment_Required")
                        .HasColumnType("bit");

                    b.Property<int>("Requisition_Status_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sign_Off_Status_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Vendor_ID")
                        .HasColumnType("int");

                    b.HasKey("Procurement_Request_ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("Payment_Method_ID");

                    b.HasIndex("Procurement_Payment_Status_ID");

                    b.HasIndex("Procurement_Status_ID");

                    b.HasIndex("Requisition_Status_ID");

                    b.HasIndex("Sign_Off_Status_ID");

                    b.HasIndex("Vendor_ID");

                    b.HasIndex("Account_Code", "Budget_ID", "Category_ID");

                    b.ToTable("Procurement_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Status", b =>
                {
                    b.Property<int>("Procurement_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Procurement_Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Procurement_Status_ID");

                    b.ToTable("Procurement_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Proof_Of_Payment", b =>
                {
                    b.Property<int>("Proof_Of_Payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proof_Of_Payment_ID"));

                    b.Property<int>("Procurement_Request_ID")
                        .HasColumnType("int");

                    b.Property<string>("Proof_Of_Payment_Doc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Proof_Of_Payment_ID");

                    b.HasIndex("Procurement_Request_ID");

                    b.ToTable("Proof_Of_Payment");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Requisition_Status", b =>
                {
                    b.Property<int>("Requisition_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Requisition_Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Requisition_Status_ID");

                    b.ToTable("Requisition_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Role", b =>
                {
                    b.Property<int>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Role_ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Role_ID = 1,
                            Description = "Managing Director",
                            Name = "MD"
                        },
                        new
                        {
                            Role_ID = 2,
                            Description = "Admin",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Sign_Off_Status", b =>
                {
                    b.Property<int>("Sign_Off_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sign_Off_Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Sign_Off_Status_ID");

                    b.ToTable("Sign_Off_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Sole_Supplier", b =>
                {
                    b.Property<int>("Sole_Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sole_Supplier_ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MD_Approval")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_ID")
                        .HasColumnType("int");

                    b.HasKey("Sole_Supplier_ID");

                    b.HasIndex("Vendor_ID");

                    b.ToTable("Sole_Supplier");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Temporary_Access", b =>
                {
                    b.Property<int>("Temp_Access_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Temp_Access_ID"));

                    b.Property<int>("Delegation_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Temp_Access_ID");

                    b.HasIndex("Delegation_ID");

                    b.ToTable("Temporary_Access");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Profile_Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("User_Id");

                    b.HasIndex("Role_ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            User_Id = 1,
                            Password = "JDoe123",
                            Profile_Picture = "test",
                            Role_ID = 1,
                            Username = "JDoe"
                        },
                        new
                        {
                            User_Id = 2,
                            Password = "Admin",
                            Profile_Picture = "test",
                            Role_ID = 2,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.User_Access", b =>
                {
                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.Property<int>("Access_ID")
                        .HasColumnType("int");

                    b.HasKey("Role_ID", "Access_ID");

                    b.HasIndex("Access_ID");

                    b.ToTable("User_Access");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.VAT", b =>
                {
                    b.Property<int>("VatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VatID");

                    b.ToTable("VAT");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor", b =>
                {
                    b.Property<int>("Vendor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Number_Of_Times_Used")
                        .HasColumnType("int");

                    b.Property<bool>("Sole_Supplier_Provided")
                        .HasColumnType("bit");

                    b.Property<int>("Vendor_Status_ID")
                        .HasColumnType("int");

                    b.HasKey("Vendor_ID");

                    b.HasIndex("Vendor_Status_ID");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Vendor_ID = 1,
                            Email = "xxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxx",
                            Name = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                            Number_Of_Times_Used = 0,
                            Sole_Supplier_Provided = false,
                            Vendor_Status_ID = 2
                        },
                        new
                        {
                            Vendor_ID = 2,
                            Email = "xxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxx",
                            Name = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2",
                            Number_Of_Times_Used = 0,
                            Sole_Supplier_Provided = false,
                            Vendor_Status_ID = 2
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Agreement", b =>
                {
                    b.Property<int>("Agreement_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Agreement_ID"));

                    b.Property<string>("Signed_Agreement_Doc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Agreement_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Agreement");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Asset", b =>
                {
                    b.Property<int>("Vendor_Asset_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Asset_ID"));

                    b.Property<string>("Quotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_ID")
                        .HasColumnType("int");

                    b.HasKey("Vendor_Asset_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.HasIndex("Vendor_ID");

                    b.ToTable("Vendor_Asset");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Category", b =>
                {
                    b.Property<int>("Vendor_Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Category_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Vendor_Category_ID");

                    b.ToTable("Vendor_Category");

                    b.HasData(
                        new
                        {
                            Vendor_Category_ID = 1,
                            Description = "General supplier",
                            Name = "General supplier"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Consumable", b =>
                {
                    b.Property<int>("Vendor_Consumbale_ID")
                        .HasColumnType("int");

                    b.Property<int>("Consumable_ID")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.Property<string>("Quotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vendor_Consumbale_ID", "Consumable_ID", "Vendor_Detail_ID");

                    b.HasIndex("Consumable_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Consumable");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Detail", b =>
                {
                    b.Property<int>("Vendor_Detail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Detail_ID"));

                    b.Property<string>("Account_Holder")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Account_Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BankStampedConfirtmation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank_Account_Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Bank_Contact_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank_Contact_PhoneNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Bank_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("BeeRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("Branch_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Person_ContactNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contact_Person_Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Contact_Person_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Contact_Person_Title")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_GSP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("DueDIllegenceRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("FaxProvided")
                        .HasColumnType("bit");

                    b.Property<bool>("Income_Tax_Num_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Insurance_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("License_Num_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("POPIA_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Payment_Terms_Provided")
                        .HasColumnType("bit");

                    b.Property<string>("Registered_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Registration_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("Signed_Agreement_Provided")
                        .HasColumnType("bit");

                    b.Property<bool>("SoleSupplierProvided")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone_Num")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("VatRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("Vendor_Category_ID")
                        .HasColumnType("int");

                    b.Property<int>("Vendor_ID")
                        .HasColumnType("int");

                    b.Property<bool>("WebsiteProvided")
                        .HasColumnType("bit");

                    b.HasKey("Vendor_Detail_ID");

                    b.HasIndex("Vendor_Category_ID");

                    b.HasIndex("Vendor_ID");

                    b.ToTable("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Fax", b =>
                {
                    b.Property<int>("Fax_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Fax_ID"));

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Fax_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Fax");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Insurance", b =>
                {
                    b.Property<int>("Insurance_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Insurance_ID"));

                    b.Property<string>("Confirmation_Doc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Insurance_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Insurance");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_License", b =>
                {
                    b.Property<string>("License_No")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("License_Doc_Upload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("License_No");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_License");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Payment_Terms", b =>
                {
                    b.Property<int>("Payment_Terms_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Terms_ID"));

                    b.Property<string>("Payment_Terms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Payment_Terms_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Payment_Terms");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Popia", b =>
                {
                    b.Property<int>("POPIA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POPIA_ID"));

                    b.Property<string>("POPIA_Declaration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("POPIA_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Popia");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Registration", b =>
                {
                    b.Property<string>("Company_Registration_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Proof_Of_Registration_Doc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Company_Registration_Number");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Registration");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Status", b =>
                {
                    b.Property<int>("Vendor_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Status_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Vendor_Status_ID");

                    b.ToTable("Vendor_Status");

                    b.HasData(
                        new
                        {
                            Vendor_Status_ID = 1,
                            Description = "Pending to be rejected or accepted",
                            Name = "Pending"
                        },
                        new
                        {
                            Vendor_Status_ID = 2,
                            Description = "Vendor is Approved",
                            Name = "approved"
                        },
                        new
                        {
                            Vendor_Status_ID = 3,
                            Description = "Completed Vendor Details",
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Tax", b =>
                {
                    b.Property<string>("Income_Tax_Num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tax_Clearance_Cert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Income_Tax_Num");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Tax");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Vat", b =>
                {
                    b.Property<string>("Vat_Registration_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VAT_Registration_Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Vat_Registration_Number");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Vat");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Website", b =>
                {
                    b.Property<int>("Website_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Website_ID"));

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Detail_ID")
                        .HasColumnType("int");

                    b.HasKey("Website_ID");

                    b.HasIndex("Vendor_Detail_ID");

                    b.ToTable("Vendor_Website");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Access", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Temporary_Access", "Temporary_Access")
                        .WithMany()
                        .HasForeignKey("Temp_Access_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Temporary_Access");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Admin", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Budget_Allocation", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Budget_Line", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Budget_Allocation", "Budget_Allocation")
                        .WithMany()
                        .HasForeignKey("Budget_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Budget_Category", "Budget_Category")
                        .WithMany()
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget_Allocation");

                    b.Navigation("Budget_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Calender_Item", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("Admin_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Importance_Level", "Importance_Level")
                        .WithMany()
                        .HasForeignKey("Importance_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Employee");

                    b.Navigation("Importance_Level");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Consumable", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Consumable_Category", "Consumable_Category")
                        .WithMany()
                        .HasForeignKey("Consumable_Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Delegation_Of_Authority", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("Admin_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Delegation_Status", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Delegation_Of_Authority", "Delegation_Of_Authority")
                        .WithMany()
                        .HasForeignKey("Delegation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delegation_Of_Authority");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Due_Dillegence", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Employee", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Mandate_Limit", "Mandate_Limit")
                        .WithMany()
                        .HasForeignKey("Mandate_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("Mandate_Limit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.HELP", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Help_Category", "Help_Category")
                        .WithMany()
                        .HasForeignKey("Help_Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Help_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Notification", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Calender_Item", "Calender_Item")
                        .WithMany()
                        .HasForeignKey("Calender_Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Notification_Type", "Notification_Type")
                        .WithMany()
                        .HasForeignKey("Notification_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calender_Item");

                    b.Navigation("Notification_Type");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Onboard_Request", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Onboard_Status", "Onboard_Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.User", "Users")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onboard_Status");

                    b.Navigation("Users");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.POPI", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Contracted_Partner_Type", "Contracted_Partner_Type")
                        .WithMany()
                        .HasForeignKey("Contracted_Partner_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Due_Dillegence", "Due_Dillegence")
                        .WithMany()
                        .HasForeignKey("Due_Diligence_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracted_Partner_Type");

                    b.Navigation("Due_Dillegence");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Payment_Made", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Request", "Procurement_Request")
                        .WithMany()
                        .HasForeignKey("Procurement_Request_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procurement_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Asset", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("Asset_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Request", "Procurement_Request")
                        .WithMany()
                        .HasForeignKey("Procurement_Request_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Procurement_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Consumable", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Consumable", "Consumable")
                        .WithMany()
                        .HasForeignKey("Consumable_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Request", "Procurement_Request")
                        .WithMany()
                        .HasForeignKey("Procurement_Request_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable");

                    b.Navigation("Procurement_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Procurement_Request", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Payment_Method", "Payment_Method")
                        .WithMany()
                        .HasForeignKey("Payment_Method_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Payment_Status", "Procurement_Payment_Status")
                        .WithMany()
                        .HasForeignKey("Procurement_Payment_Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Status", "Procurement_Status")
                        .WithMany()
                        .HasForeignKey("Procurement_Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Requisition_Status", "Requisition_Status")
                        .WithMany()
                        .HasForeignKey("Requisition_Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Sign_Off_Status", "Sign_Off_Status")
                        .WithMany()
                        .HasForeignKey("Sign_Off_Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Budget_Line", "Budget_Line")
                        .WithMany()
                        .HasForeignKey("Account_Code", "Budget_ID", "Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget_Line");

                    b.Navigation("Employee");

                    b.Navigation("Payment_Method");

                    b.Navigation("Procurement_Payment_Status");

                    b.Navigation("Procurement_Status");

                    b.Navigation("Requisition_Status");

                    b.Navigation("Sign_Off_Status");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Proof_Of_Payment", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Procurement_Request", "Procurement_Request")
                        .WithMany()
                        .HasForeignKey("Procurement_Request_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procurement_Request");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Sole_Supplier", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Temporary_Access", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Delegation_Of_Authority", "Delegation_Of_Authority")
                        .WithMany("Temporary_Access")
                        .HasForeignKey("Delegation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delegation_Of_Authority");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.User", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.User_Access", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Access", "Access")
                        .WithMany()
                        .HasForeignKey("Access_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Access");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Status", "Vendor_Status")
                        .WithMany()
                        .HasForeignKey("Vendor_Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Status");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Agreement", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Asset", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Consumable", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Consumable", "Consumable_IDs")
                        .WithMany()
                        .HasForeignKey("Consumable_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable_IDs");

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Detail", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Category", "Vendor_Category")
                        .WithMany()
                        .HasForeignKey("Vendor_Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcionAPI.Models.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");

                    b.Navigation("Vendor_Category");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Fax", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Insurance", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_License", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Payment_Terms", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Popia", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Registration", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Tax", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Vat", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Vendor_Website", b =>
                {
                    b.HasOne("ProcionAPI.Models.Entities.Vendor_Detail", "Vendor_Detail")
                        .WithMany()
                        .HasForeignKey("Vendor_Detail_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor_Detail");
                });

            modelBuilder.Entity("ProcionAPI.Models.Entities.Delegation_Of_Authority", b =>
                {
                    b.Navigation("Temporary_Access");
                });
#pragma warning restore 612, 618
        }
    }
}
